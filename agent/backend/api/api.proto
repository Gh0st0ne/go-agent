syntax = "proto3";

package sqreen.agent.backend.api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "api";
option (gogoproto.gostring_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.face_all) = true;
option (gogoproto.goproto_getters_all) = false;

message AppLoginRequest {
  message VariousInfos {
    google.protobuf.Timestamp time = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    uint32 pid = 3;
    uint32 ppid = 4;
    uint32 euid = 5;
    uint32 egid = 6;
    uint32 uid = 7;
    uint32 gid = 8;
    string name = 9;
  }

  string bundle_signature = 1;
  VariousInfos various_infos = 2 [(gogoproto.nullable) = false];
  string agent_type = 3;
  string agent_version = 4;
  string os_type = 5;
  string hostname = 6;
  string runtime_type = 7;
  string runtime_version = 8;
  string framework_type = 9;
  string framework_version = 10;
  string environment = 11;
}

message AppLoginResponse {
  message Feature {
    uint32 batch_size = 1;
    uint32 max_staleness = 2;
    uint32 heartbeat_delay = 3;
  }

  string session_id = 1;
  bool status = 2;
  repeated CommandRequest commands = 3 [(gogoproto.nullable) = false];
  Feature features = 4 [(gogoproto.nullable) = false];
  string pack_id = 5;
  repeated Rule rules = 6 [(gogoproto.nullable) = false];
}

message CommandRequest {
  string name = 1;
  repeated string params = 2;
  string uuid = 3;
}

message CommandResponse {
}

message MetricResponse {
}

message AppBeatRequest {
  map<string, CommandResponse> command_results = 1 [(gogoproto.nullable) = false];
  repeated MetricResponse metrics = 2 [(gogoproto.nullable) = false];
}

message AppBeatResponse {
  repeated CommandRequest commands = 1 [(gogoproto.nullable) = false];
  bool status = 2;
}

message Rule {
}

message Dependency {
  message Source {
    string name = 1;
    repeated string remotes = 2;
  }

  string name = 1;
  string version = 2;
  string homepage = 3;
  Source source = 4;
}

message RequestRecord {
  message Request {
    message Header {
      string key = 1;
      string value = 2;
    }

    message Params {
      // string json = 1;
      //string query = 2;
      //string form = 3;
      //string others = 4;
    }

    string rid = 1;
    repeated Header headers = 2 [(gogoproto.nullable) = false];
    string verb = 3;
    string path = 4;
    string raw_path = 5;
    string host = 6;
    string port = 7;
    string remote_ip = 8;
    string remote_port = 9;
    string scheme = 10;
    string user_agent = 11;
    string referer = 12;
    Params params = 13 [(gogoproto.nullable) = false];
  }

  message Response {
    uint32 status = 1;
    uint32 content_length = 2;
    string content_type = 3;
  }

  message Observed {
    message Attack {
      string rule_name = 1;
      bool test = 2;
      string infos = 3;
      repeated string backtrace = 4;
      google.protobuf.Timestamp time = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
      bool block = 6;
    }

    message SDKEvent {
      message Options {
        google.protobuf.Struct properties = 1 [(gogoproto.customtype) = "Struct"];
      }

      google.protobuf.Timestamp time = 1 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
      string name = 2;
      google.protobuf.ListValue args = 3 [(gogoproto.customtype) = "ListValue", (gogoproto.nullable) = false];
    }

    message Exception {
      string message = 1;
      string klass = 2;
      string rule_name = 3;
      bool test = 4;
      string infos = 5;
      repeated string backtrace = 6;
      google.protobuf.Timestamp time = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    }

    message Observation {
      string category = 1;
      string key = 2;
      string value = 3;
      google.protobuf.Timestamp time = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    }

    message DataPoint {
      string rulespack_id = 1;
      string rule_name = 2;
      google.protobuf.Timestamp time = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
      string infos = 4;
    }

    repeated Attack attacks = 1;
    repeated SDKEvent sdk = 2;
    repeated Exception sqreen_exceptions = 3;
    repeated Observation observations = 4;
    repeated DataPoint data_points = 5;
  }

  string version = 1;
  string rulespack_id = 2 [(gogoproto.jsontag) = "rulespack_id"];
  string client_ip = 3 [(gogoproto.jsontag) = "client_ip"];
  Request request = 4 [(gogoproto.nullable) = false];
  Response response = 5 [(gogoproto.nullable) = false];
  Observed observed = 6 [(gogoproto.nullable) = false];
}
