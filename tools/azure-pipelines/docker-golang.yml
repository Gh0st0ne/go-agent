parameters:
  name: ''
  vmImage: ''
  continueOnError: false
  go:
    container: golang
    junit: true
    versions: [ 1.13, 1.12 ]
    targets:
      GOARCH: [ amd64 ]

jobs:
  - job: ${{ parameters.name }}
    continueOnError: ${{ parameters.continueOnError }}
    pool:
      vmImage: ${{ parameters.vmImage }}
    strategy:
      matrix:
        ${{ each goVersion in parameters.go.versions }}:
          ${{ each goarch in parameters.go.targets.GOARCH }}:
            ${{ format('go{0}_{1}', goVersion, goarch) }}:
              GOVERSION: ${{ goVersion }}
              GOARCH: ${{ goarch }}
    container:
      image: ${{ parameters.go.container }}:$(GOVERSION)
      env:
        GOARCH: $(GOARCH)
    steps:
      - ${{ if parameters.go.junit }}:
          - script: go build -v gotest.tools/gotestsum
            name: download_gotestsum
            displayName: download gotestsum
          - script: |
              go env
              ./gotestsum --junitfile report.xml ./...
            name: go_test
            displayName: go test
          - task: PublishTestResults@2
            inputs:
              testRunner: JUnit
              testResultsFiles: $(System.DefaultWorkingDirectory)/**/report.xml
              buildPlatform: ${{ parameters.name }}_$(GOVERSION)_$(GOARCH)
      - ${{ if not(parameters.go.junit) }}:
          - script: |
              go env
              go test -v ./...
            name: go_test
            displayName: go test
